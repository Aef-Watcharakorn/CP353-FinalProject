openapi: "3.0.0"
info:
  description: API Reference
  version: 1.0.0
  title: Python Flask RESTful API | Country API
servers:
  - url: http://localhost:5000
paths:
  /ml/country:
    post:
      parameters:
      - name: name
        in: query
        description: Country name
        schema:
          type: string
      responses:
        '200':
          description: Successful operation search name
          content:
            application/json:
              schema:
                type: object
                properties:
                  prediction: 
                    type: string
                    example: asian
                  confidence:
                    type: number
                    example: 1
        '204':
          description: Country name not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: not found
  /Country:
    get:
      tags:
        - Country
      parameters:
      - name: name
        in: query
        description: Country name
        schema:
          type: string
      responses:
        '200':
          description: Successful operation search name
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/countrySchemas"
        '204':
          description: Country name not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: not found
    
    put:
      security:
        - Authentication: []
      tags:
        - Country/<string:country_name>
      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/editcountrySchema"
      responses:
        '200':
          description: Successful create food
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/countrySchemas"
        '401':
          description: Unauthorize
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: Token has expired
        '204':
          description: Food name not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: not found
  /countries/{country_name}:
    delete:
      security:
        - Authentication: []
      tags:
        - Country/<string:country_name>

      parameters:
        - name: name
          in: path
          description: Country name
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful delete country
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/countrySchemas"
        '500':
          description: Food name not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: not found
  /Country/all:
    get:
      tags:
        - Country
      responses:
        '200':
          description: Successful operation search name
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/allcountrySchemas"
        '500':
          description: Country name not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: not found

  /Country/alldata:
    get:
      tags:
        - Country
      responses:
        '200':
          description: Successful operation search name
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/alldataSchemas"
        '500':
          description: Country name not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: not found
    post:
      tags:
        - Country
      parameters:
      - name: name
        in: query
        description: Country name
        schema:
          type: string
      responses:
        '200':
          description: Successful operation search name
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/alldataSchemas"
        '204':
          description: Country name not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: not found


  /currency:
    get:
      tags:
        - Country
      parameters:
      - name: name
        in: query
        description: Country name
        schema:
          type: string
      responses:
        '200':
          description: Successful operation search name
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/currencySchemas"
        '204':
          description: Country name not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: not found


components:
  securitySchemes:
    Authentication:     # <-- arbitrary name for the security scheme
      type: http
      scheme: basic

  schemas:
    countrySchemas:
        type: object
        properties:
          common_name:
            type: string
          official_name:
            type: string
          capital:
            type: string
          region:
            type: string
          subregion:
            type: string
          languages:
            type: string
          currencies:
            type: string
          area:
            type: number

    allcountrySchemas:
        type: object
        properties:
          common_name:
            type: string
          official_name:
            type: string

    editcountrySchema:
        type: object
        properties:
          common_name:
            type: string
          official_name:
            type: string
          capital:
            type: string
          region:
            type: string
          subregion:
            type: string
          languages:
            type: string
          currencies:
            type: string
          area:
            type: number

    currencySchemas:
        type: object
        properties:
          common_name:
            type: string
          official_name:
            type: string
          capital:
            type: string
          region:
            type: string
          subregion:
            type: string
          languages:
            type: string
          currencies:
            type: string
          area:
            type: number

    alldataSchemas:
      type: object
      properties:
        common_name:
          type: string
        official_name:
          type: string
        native:
          type: array
        tld :
          type: string
        cca2:
          type: string
        ccn3:
          type: string
        cioc:
          type: string
        independent:
          type: boolean
        status:
          type: string
        unMember:
          type: boolean
        currencies:
          type: string
        idd:
          type: string
        capital:
          type: string
        altSpellings:
          type: string
        region:
          type: string
        subregion:
          type: string
        languages:
          type: array
        translation:
          type: array
        latlng:
          type: array
        landlocked:
          type: boolean
        borders:
          type: array
        area:
          type: integer
        flag: 
          type: string
        demonyms:
          type: array


          
